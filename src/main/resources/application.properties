spring.application.name=board

# 한글 깨짐 해결
server.servlet.encoding.force=true


# DB
#DB에 접속할 때 사용하는 드라이버 클래스명
spring.datasource.driver-class-name=org.h2.Driver

# DB 사용자명, 비밀번호
spring.datasource.username=sa
spring.datasource.password=1234


# H2 DB에 웹 콘솔로 접근할 수 있도록 허용하기 (localhost:8080/h2-console)
spring.h2.console.enabled=true

# DB URL 설정
#유니크 URL 생성하지 않기
spring.datasource.generate-unique-name=false

#고정 URL 설정하기
spring.datasource.url=jdbc:h2:tcp://localhost/~/testdb


# JPA
#JPA 로깅 설정 (DEBUG 레벨로)
logging.level.org.hibernate.SQL=DEBUG

# 쿼리 줄바꿈
spring.jpa.properties.hibernate.format_sql=true

# 매개변수 값 보여주기
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# 스프링 부트와 하이버네이트를 함께 사용할 때 필요한 설정 항목으로, 표준 SQL이 아닌 하이버네이트만의 SQL을 사용할 때 필요한 항목
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# Hibernate DDL 자동 생성 설정 (개발 모드에서만 사용할 것, 추후 변경 => create-drop / update)
# 권장사항 none (default) 또는 validate (운영 db에 영향을 안주기 위해서)
# 엔티티를 기준으로 데이터의 테이블을 생성하는 규칙 설정(update는 엔티티의 변경된 부분만 DB에 적용)
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update


# 데이터베이스 초기화 모드 설정 (개발 모드에서만 사용할 것, 추후 변경 => always / never)
spring.datasource.initialization-mode=always

# data.sql을 사용한 데이터 초기화 허용
#spring.jpa.defer-datasource-initialization=true

# (스프링부트 3.x 이후는 불필요)
#spring.datasource.data=classpath:/data.sql

#data.sql 사용 시 한글 깨짐 해결
#spring.sql.init.encoding=utf-8